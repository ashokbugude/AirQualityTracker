{"ast":null,"code":"var _jsxFileName = \"/Users/ashok.bugude/Documents/_Never Backup/Ashok/AirQualityTracker/src/Chart.js\",\n    _s = $RefreshSig$();\n\nimport LineChart from 'react-linechart';\nimport '../node_modules/react-linechart/dist/styles.css';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  rows,\n  cities\n}) => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n  const [city, setCity] = useState(null);\n  let airQualityData = rows.get(city) && rows.get(city).airQualityData;\n  let data = [];\n\n  if (airQualityData != null) {\n    for (var i = 0; i < airQualityData.length; i++) {\n      data = data.concat({\n        x: i,\n        y: airQualityData[i]\n      });\n    }\n  }\n\n  const handleChange = event => {\n    setCity(event.target.value);\n  };\n\n  const data1 = [{\n    color: \"steelblue\",\n    points: data\n  }];\n  let screenWidth = window.screen.width;\n  screenWidth = screenWidth - 500;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Air quality line chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-outlined-label\",\n          children: \"Select city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-outlined-label\",\n          id: \"demo-simple-select-outlined\",\n          value: city,\n          onChange: handleChange,\n          label: \"Select city\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), cities.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: screenWidth,\n        height: 400,\n        data: data1,\n        xLabel: \"X : Time in secs\",\n        yLabel: \"Y : AQI \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"Fiu+0wYCKl69ChTUeAQYkeywbpA=\", true);\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ashok.bugude/Documents/_Never Backup/Ashok/AirQualityTracker/src/Chart.js"],"names":["LineChart","Select","FormControl","InputLabel","MenuItem","makeStyles","useState","Chart","rows","cities","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","classes","city","setCity","airQualityData","get","data","i","length","concat","x","y","handleChange","event","target","value","data1","color","points","screenWidth","window","screen","width","map","item"],"mappings":"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","sourcesContent":["import LineChart from 'react-linechart';\nimport '../node_modules/react-linechart/dist/styles.css';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\n\nconst Chart =  ({\n    rows,\n    cities,\n}) => {\n\n    const useStyles = makeStyles((theme) => ({\n        formControl: {\n          margin: theme.spacing(1),\n          minWidth: 120,\n        },\n        selectEmpty: {\n          marginTop: theme.spacing(2),\n        },\n      }));\n\n    const classes = useStyles();\n    const [city,setCity] = useState(null)\n    let airQualityData = rows.get(city) && rows.get(city).airQualityData\n    \n    let data = []\n    if(airQualityData!=null) {\n        for(var i =0; i<airQualityData.length;i++) {\n            data = data.concat({\n                x : i,\n                y : airQualityData[i]\n            })\n        } \n    }  \n\n    const handleChange = (event) => {\n        setCity(event.target.value);\n      };\n \n    const data1 = [\n        {\t\t\t\t\t\t\t\t\t\n            color: \"steelblue\", \n            points: data\n        }\n    ];\n\n    let screenWidth = window.screen.width\n    screenWidth = screenWidth - 500\n\n    return (\n        <div>\n            <div className=\"App\">\n                <h1>Air quality line chart</h1>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Select city</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={city}\n          onChange={handleChange}\n          label=\"Select city\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {\n              cities.map((item => (\n                <MenuItem value={item}>{item}</MenuItem>\n              )\n                ))\n          }\n        </Select>\n\n      </FormControl>\n                <LineChart \n                    width={screenWidth}\n                    height={400}\n                    data={data1}\n                    xLabel= {\"X : Time in secs\"}\n                    yLabel= {\"Y : AQI \"}\n                />\n            </div>\t\t\t\t\n        </div>\n    );\n\n    \n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}